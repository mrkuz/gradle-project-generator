apply plugin: 'io.spring.dependency-management'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/release' }
}

ext {
    set('springCloudVersion', "Hoxton.M1")
    set('log4j2.version', '2.12.0')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    // Spring Cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    // Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.github.mweirauch:micrometer-jvm-extras:0.1.4'
    implementation 'org.jolokia:jolokia-core'
    // Logging
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'biz.paluch.logging:logstash-gelf:1.13.0'
    implementation 'com.lmax:disruptor:3.4.2'
    // Miscellaneous
    implementation 'com.google.guava:guava:28.0-jre'
    implementation 'org.threeten:threeten-extra:1.5.0'
    implementation 'com.esotericsoftware:kryo:4.0.2'
    implementation 'com.google.protobuf:protobuf-java:3.9.0'
    compileOnly 'org.projectlombok:lombok'
    // Annotation processors
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.apache.logging.log4j:log4j-core'
    annotationProcessor 'org.projectlombok:lombok'
    // Development
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // Testing
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'junit', module: 'junit'
    }
}

task printBom {
    doLast {
        dependencyManagement.importedProperties.sort().each {
            entry -> println "$entry.key: $entry.value"
        }
    }
}
